{"version":3,"sources":["components/TodoListItem.js","components/AddTodo.js","components/TodoList.js","components/Ticking.js","components/Timer.js","containers/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["TodoListItem","_ref","todos","deleteItem","chooseItem","todoItems","length","map","todo","react_default","a","createElement","className","style","padding","key","id","onClick","content","background","color","lineHeight","border","boxShadow","AddTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleSubmit","e","target","value","setState","addItem","type","placeholder","onChange","React","Component","TodoList","filter","Math","random","concat","toConsumableArray","updateTask","components_AddTodo","components_TodoListItem","Ticking","convertTime","timestamp","minutes","floor","seconds","time","fontSize","Timer","start","percentage","play","stop","_this2","interval","setInterval","clearInterval","_this$state","showTask","components_Ticking","opacity","width","Wrapper","currentTask","components_Timer","components_TodoList","App","containers_Wrapper","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6109da80.chunk.js","sourcesContent":["import React from 'react';\n\nconst TodoListItem = ({todos, deleteItem, chooseItem}) => {\n\n  const todoItems = todos.length ? (\n    todos.map(todo => {\n      return (\n        <div className=\"todo item\" style={{padding:'10px 0px'}} key={todo.id} onClick={() => {chooseItem(todo.content)}}>\n          <div className=\"right floated content\">\n            <button className=\"ui big icon button\" style={{background:'none', color:'black'}} onClick={() => {deleteItem(todo.id)}}>\n              <i className=\"trash alternate outline icon\"></i>\n            </button>\n          </div>\n          <div className=\"middle aligned content\">\n            <h2 style={{lineHeight:2}}>{todo.content}</h2>\n          </div>\n        </div>\n      )\n    })\n  ) : (\n    <div className=\"ui placeholder segment center aligned\" style={{background:'none', border:'0px', boxShadow:'none'}}>\n      <h2>Yay! You don't have any todo task left!</h2>\n    </div>\n  )\n\n  return (\n    <div className=\"ui big divided list\">\n      {todoItems}\n    </div>\n  ) \n}\n\nexport default TodoListItem","import React from 'react';\n\nclass AddTodo extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        content: '',\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n      const content = e.target.value;\n      this.setState({\n        content\n      })\n    }\n\n    handleSubmit(e) {\n      this.props.addItem(this.state);\n      this.setState({\n        content: ''\n      })\n    }\n \n    render() {\n      const { content } = this.state;\n      const { handleChange, handleSubmit } = this;\n      return (\n        <div className=\"ui big fluid action input\">\n          <input type=\"text\" value={content} placeholder=\"Add new todo\" onChange={handleChange}/>\n          <button className=\"ui icon black button\" onClick={handleSubmit}>\n            <i className=\"plus icon\"></i>\n          </button>\n        </div>\n      );\n    }\n}\n\nexport default AddTodo\n","import React from 'react';\nimport TodoListItem from './TodoListItem';\nimport AddTodo from './AddTodo';\n\nclass TodoList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: [\n                { id: 1, content: 'Clean Dishes' },\n                { id: 2, content: 'Buy Groceries' },\n            ],\n        };\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.chooseItem = this.chooseItem.bind(this);\n    }\n\n    deleteItem(id) {\n        const todos = this.state.todos.filter(todo => {\n            return todo.id !== id\n        });\n        this.setState({\n            todos\n        })\n    }\n\n    addItem(todo) {\n        todo.id = Math.random();\n        let todos = [...this.state.todos, todo];\n        this.setState({\n            todos\n        })\n    }\n\n    chooseItem(todo) {\n        this.props.updateTask(todo);\n    }\n\n    render() {\n        const { todos } = this.state;\n        const { deleteItem, addItem, chooseItem } = this;\n        return (\n            <div style={{padding:'2rem 1rem'}}>\n                <AddTodo addItem={addItem}/>\n                <TodoListItem todos={todos} deleteItem={deleteItem} chooseItem={chooseItem}/>\n            </div>\n        );\n    }\n}\n\nexport default TodoList\n","import React from 'react';\n\nclass Ticking extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n      };\n      this.convertTime = this.convertTime.bind(this);\n    }\n\n    convertTime(timestamp) {\n      let minutes = Math.floor(timestamp / 60);\n      let seconds = timestamp - minutes * 60;\n      if (seconds < 10) {\n        seconds = \"0\" + seconds;\n      }\n      timestamp = minutes + \":\" + seconds;\n      return timestamp;\n    };\n\n    render() {\n      const { time } = this.props;\n      const { convertTime } = this;\n      return (\n        <div className=\"ui huge header center aligned\" style={{fontSize:'6rem'}}>{convertTime(time)}</div>\n      );\n    }\n}\n\nexport default Ticking\n","import React from 'react';\nimport Ticking from './Ticking';\n\nclass Timer extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        time: 1500, /* seconds */\n        start: false,\n        percentage: 0,\n      };\n      this.play = this.play.bind(this);\n      this.stop = this.stop.bind(this);\n    }\n\n    play() {\n      this.setState({ start: true });\n      this.interval = setInterval(() => {\n        this.setState({\n          time: this.state.time - 1,\n          percentage: this.state.percentage + 1\n        });\n      }, 1000);\n    };\n  \n    stop() {\n      this.setState({ start: false, time: 1500, percentage: 0 });\n      clearInterval(this.interval);\n    };\n\n    render() {\n      const { time, start, percentage } = this.state;\n      const { showTask } = this.props;\n      const { play, stop } = this;\n      return (\n        <div className=\"ui center middle aligned grid\">\n          <div className=\"sixteen center aligned wide column\">\n            <Ticking time={time}/>\n            {showTask ? <h1 className=\"header\">{showTask}</h1>: <h1 className=\"header\" style={{opacity:'.3'}}>What to do next?</h1>}\n            <button className=\"ui massive icon button\" style={{background:'none', color:'black'}} onClick={play}>\n              { start ? <i className=\"pause icon\"></i> : <i className=\"play icon\"></i>}\n            </button>\n            <button className=\"ui massive icon button\" style={{background:'none', color:'black'}} onClick={stop}>\n              <i className=\"stop icon\"></i>\n            </button>\n            <div className=\"ui divider\"></div>\n            <h3>You just started on the road. <br />Keep going!</h3>\n            <div className=\"progress-bar-wrapper\">\n              <div className=\"filler\" style={{ width: `${percentage}%` }} />\n              <i className=\"truck icon\"></i>\n              <div className=\"progress-bar\"></div>\n              <i className=\"flag checkered icon\"></i>\n            </div>\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default Timer\n","import React from 'react';\nimport TodoList from '../components/TodoList';\nimport Timer from '../components/Timer';\n\nclass Wrapper extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        currentTask: null,\n      };\n      this.updateTask = this.updateTask.bind(this);\n    }\n\n    updateTask(todo) {\n      this.setState({\n        currentTask: todo,\n      })\n    }\n\n    render() {\n      const { currentTask } = this.state;\n      const { updateTask } = this;\n      return (\n        <div className=\"ui equal height stackable grid\">\n          <div className=\"eight wide column\" style={{background:'yellow'}}>\n            <Timer showTask={currentTask}/>\n          </div>\n          <div className=\"eight wide column\">\n            <TodoList updateTask={updateTask}/>\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default Wrapper\n","import React from 'react';\nimport Wrapper from './containers/Wrapper'\n\nfunction App() {\n  return (\n    <Wrapper />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}